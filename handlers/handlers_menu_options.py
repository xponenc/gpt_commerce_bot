from aiogram.types import Message
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from keyboards import *


# –ö–ª–∞—Å—Å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
class OptionState(StatesGroup):
    choosing_option = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–∏
    changing_name = State()    # –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏
    changing_speed = State()   # –í—ã–±–æ—Ä –Ω–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–≤—É–∫–∞
    changing_temperature = State()  # –í—ã–±–æ—Ä –Ω–æ–≤–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    changing_audio_responses = State()  # –ê—É–¥–∏–æ –æ—Ç–≤–µ—Ç—ã –≤ —á–∞—Ç–∞—Ö
    changing_autopayments = State()  # –ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂


# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ Router, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏
router = Router()


# /options *************************************************************************
@router.message(Command('options'))
async def cmd_options(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("üõ†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
                         reply_markup=options_keyboard())
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–æ–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞"
    await state.set_state(OptionState.choosing_option)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–∏ –∏–∑ get_options_keyboard()
@router.message(OptionState.choosing_option)
async def process_option(message: Message, state: FSMContext):
    if message.text == "üìù –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è":
        await message.answer("üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:")
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏
        await state.set_state(OptionState.changing_name)

    elif message.text == "üéöÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –∑–≤—É–∫–∞":
        await message.answer("üéöÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∑–≤—É–∫–∞:",
                             reply_markup=get_speed_reply_keyboard())
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏
        await state.set_state(OptionState.changing_speed)

    elif message.text == "üå°Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É":
        await message.answer("üå°Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É:",
                             reply_markup=get_temperature_reply_keyboard())
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
        await state.set_state(OptionState.changing_temperature)

    elif message.text == "üéß –ê—É–¥–∏–æ –æ—Ç–≤–µ—Ç—ã –≤ —á–∞—Ç–∞—Ö":
        await message.answer("üéß –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–ª—è –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç–æ–≤ –≤ —á–∞—Ç–∞—Ö:",
                             reply_markup=get_audio_reply_keyboard())
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç–æ–≤
        await state.set_state(OptionState.changing_audio_responses)

    elif message.text == "üîÑ –í–∫–ª—é—á–∏—Ç—å/–æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏":
        await message.answer("üîÑ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å/–æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏?",
                             reply_markup=get_autopayments_reply_keyboard())
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π
        await state.set_state(OptionState.changing_autopayments)
    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:",
                             reply_markup=options_keyboard())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏
@router.message(OptionState.changing_name)
async def change_name(message: Message, state: FSMContext):
    new_name = message.text  # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è
    # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º new_name ...
    await message.answer(f"–í–∞—à–µ –Ω–æ–≤–æ–µ –∏–º—è: {new_name}. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–≤—É–∫–∞
@router.message(OptionState.changing_speed)
async def change_speed(message: Message, state: FSMContext):
    new_speed = message.text  # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
    # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º new_speed ...
    await message.answer(f"–°–∫–æ—Ä–æ—Å—Ç—å –∑–≤—É–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {new_speed}. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
@router.message(OptionState.changing_temperature)
async def change_temperature(message: Message, state: FSMContext):
    new_temperature = message.text  # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
    # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º new_temperature ...
    await message.answer(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º–æ–¥–µ–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {new_temperature}. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—É–¥–∏–æ –æ—Ç–≤–µ—Ç–æ–≤ –≤ —á–∞—Ç–∞—Ö
@router.message(OptionState.changing_audio_responses)
async def change_audio_responses(message: Message, state: FSMContext):
    audio_responses = message.text
    # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º audio_responses ...
    await message.answer(f"–ê—É–¥–∏–æ –æ—Ç–≤–µ—Ç—ã –≤ —á–∞—Ç–∞—Ö: {audio_responses}. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–µ–π
@router.message(OptionState.changing_autopayments)
async def change_autopayments(message: Message, state: FSMContext):
    autopayments = message.text
    # –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º autopayments ...
    await message.answer(f"–ê–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∏: {autopayments}. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
