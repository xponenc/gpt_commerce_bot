from aiogram.types import FSInputFile, Message
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from keyboards.keyboards import start_dialog_keyboard
from keyboards.keyboards_db import *
from sqlalchemy import select
from db_start import async_session
from db_models import Psychologist


# –ö–ª–∞—Å—Å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
class PsychologistState(StatesGroup):
    choosing_psychologist = State()  # –í—ã–±–æ—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∞


# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ Router, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏
router = Router()


# /personal_psychologist
@router.message(Command('personal_psychologist'))
async def cmd_psychologist(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("üëÅÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è:",
                         reply_markup=await psychologist_keyboard())
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∞
    await state.set_state(PsychologistState.choosing_psychologist)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –∏–∑ psychologist_keyboard()
@router.message(F.text & ~F.text.startswith('/') & ~F.text.in_(['üîô –ù–∞–∑–∞–¥', 'üí¨ –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥']),
                PsychologistState.choosing_psychologist)
async def process_psychologist(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(chosen_psychologist=message.text)

    async with async_session() as session:  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å–µ—Å—Å–∏–∏

        # –ß–µ—Ä–µ–∑ psychologists_table. –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞
        # result = await session.execute(select(
        #     psychologists_table.c.avatar,
        #     psychologists_table.c.description
        # ).where(psychologists_table.c.display_name == message.text))

        # –ß–µ—Ä–µ–∑ –º–æ–¥–µ–ª—å Psychologist. –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞
        result = await session.execute(select(
            Psychologist.avatar,
            Psychologist.description
        ).where(Psychologist.display_name == message.text))

        avatar, description = result.one()  # –ü–æ–ª—É—á–∞–µ–º —Å—Ä–∞–∑—É –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        photo = FSInputFile(f"UIA_Work/TG_Bot_Psy/06/picture/{avatar}")
        await message.answer_photo(photo=photo)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer(description, reply_markup=start_dialog_keyboard())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º
@ router.message(F.text == 'üí¨ –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥', PsychologistState.choosing_psychologist)
async def start_dialog(message: Message, state: FSMContext):
    data = await state.get_data()  # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤—ã–±–æ—Ä–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∞
    if data:
        await message.answer(f"{data['chosen_psychologist']}.")


# –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∞
@ router.message(F.text == 'üîô –ù–∞–∑–∞–¥', PsychologistState.choosing_psychologist)
async def back_cmd_psychologist(message: Message, state: FSMContext):
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await cmd_psychologist(message, state)
